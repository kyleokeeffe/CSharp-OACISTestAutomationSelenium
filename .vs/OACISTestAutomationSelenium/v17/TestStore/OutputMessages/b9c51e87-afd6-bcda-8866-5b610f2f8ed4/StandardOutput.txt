Initializing Driver...
Driver Initialized.
Waiting for page to load...
Wait over - Page loaded.
Finding element //*[@id="ctlQueryBox_txtQuery"] - waiting for response...
Wait over - element //*[@id="ctlQueryBox_txtQuery"] found.
Finding element //*[@id="ctlQueryBox_txtQuery"] - waiting for response...
Wait over - element //*[@id="ctlQueryBox_txtQuery"] found.
Waiting for page to load...
Wait over - Page loaded.
Finding row...
Finding element //table[@class="Grid"] - waiting for response...
Wait over - element //table[@class="Grid"] found.
Finding element ./tbody/tr[2] - waiting for response...
Wait over - element ./tbody/tr[2] found.
Find element wait done.
Row found.
Waiting for page to load...
Wait over - Page loaded.
Finding element //*[@id="ctlPageNav_lnkApplications"] - waiting for response...
Wait over - element //*[@id="ctlPageNav_lnkApplications"] found.
Waiting for page to load...
Wait over - Page loaded.
Finding row...
Finding element //table[@class="Grid"] - waiting for response...
Wait over - element //table[@class="Grid"] found.
Finding element //table[@class="Grid"] - waiting for response...
Wait over - element //table[@class="Grid"] found.
Finding element ./tbody/tr[@class="GridHeader"]/td[text()[contains(.,"Intake")] and text()[contains(., "Process")]]/preceding-sibling::td - waiting for response...
Find element wait done.
Finding element ./tbody/tr/td[2]/span[text()[contains(., "Determination of Needs")]]/parent::td/parent::tr - waiting for response...
Wait over - element ./tbody/tr/td[2]/span[text()[contains(., "Determination of Needs")]]/parent::td/parent::tr found.
Find element wait done.
Row found.
Waiting for page to load...
Wait over - Page loaded.
Finding element //a[@class="TabOn"] - waiting for response...
Wait over - element //a[@class="TabOn"] found.
Waiting for page to load...
Wait over - Page loaded.
Finding element //div[@class="SectionTabOn"] - waiting for response...
Wait over - element //div[@class="SectionTabOn"] found.
Finding element //input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden")) ] - waiting for response...
Wait over - element //input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden")) ] found.
Finding element //a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
Wait over - element //a[contains(@id,"ctl") and contains(@id,"lnk")] found.
Finding element //div[@class="SectionTabOff"] - waiting for response...
Wait over - element //div[@class="SectionTabOff"] found.
Finding element ./descendant::input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden"))] - waiting for response...
Finding element ./descendant::a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
Finding element ./descendant::input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden"))] - waiting for response...
Finding element ./descendant::a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
Finding element ./descendant::input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden"))] - waiting for response...
Finding element ./descendant::a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
Finding element ./descendant::input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden"))] - waiting for response...
Finding element ./descendant::a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
Finding element ./descendant::input[@type="text" and starts-with(@id,"ctl") and not(contains(@class,"idden"))] - waiting for response...
Finding element ./descendant::a[contains(@id,"ctl") and contains(@id,"lnk")] - waiting for response...
private IWebDriver Driver;
private IWebElement querytxt;
private IWebElement applicantLastNametxt;
private IWebElement applicantFirstNametxt;
private IWebElement applicantDob_txtDatectl;
private IWebElement referenceNumbertxt;
private IWebElement applicantUnittxt;
private IWebElement applicantStreetNumbertxt;
private IWebElement applicantStreettxt;
private IWebElement applicantPOBoxtxt;
private IWebElement applicantCitytxt;
private IWebElement applicantPostalCodetxt;
private IWebElement applicantEmailtxt;
private IWebElement phoneHometxt;
private IWebElement applicantExt1txt;
private IWebElement phoneCelltxt;
private IWebElement applicantExt2txt;
private IWebElement applicantOtherLanguagetxt;
private IWebElement mainlnk;
private IWebElement queuelnk;
private IWebElement clientlnk;
private IWebElement maintenancelnk;
private IWebElement reportslnk;
private IWebElement newlnk;
private IWebElement savelnk;
private IWebElement deletelnk;
private IWebElement appListlnk;
private IWebElement mergelnk;
private IWebElement expenseslnk;
private IWebElement authorizationlnk;
private IWebElement narrativeslnk;

public IWebElement Querytxt
{
	get => querytxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlQueryBox_txtQuery""]") : querytxt;
	set => querytxt= value;
}
public IWebElement ApplicantLastNametxt
{
	get => applicantLastNametxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantLastName""]") : applicantLastNametxt;
	set => applicantLastNametxt= value;
}
public IWebElement ApplicantFirstNametxt
{
	get => applicantFirstNametxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantFirstName""]") : applicantFirstNametxt;
	set => applicantFirstNametxt= value;
}
public IWebElement ApplicantDob_txtDatectl
{
	get => applicantDob_txtDatectl == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_ctlApplicantDob_txtDate""]") : applicantDob_txtDatectl;
	set => applicantDob_txtDatectl= value;
}
public IWebElement ReferenceNumbertxt
{
	get => referenceNumbertxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtReferenceNumber""]") : referenceNumbertxt;
	set => referenceNumbertxt= value;
}
public IWebElement ApplicantUnittxt
{
	get => applicantUnittxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantUnit""]") : applicantUnittxt;
	set => applicantUnittxt= value;
}
public IWebElement ApplicantStreetNumbertxt
{
	get => applicantStreetNumbertxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantStreetNumber""]") : applicantStreetNumbertxt;
	set => applicantStreetNumbertxt= value;
}
public IWebElement ApplicantStreettxt
{
	get => applicantStreettxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantStreet""]") : applicantStreettxt;
	set => applicantStreettxt= value;
}
public IWebElement ApplicantPOBoxtxt
{
	get => applicantPOBoxtxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantPOBox""]") : applicantPOBoxtxt;
	set => applicantPOBoxtxt= value;
}
public IWebElement ApplicantCitytxt
{
	get => applicantCitytxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantCity""]") : applicantCitytxt;
	set => applicantCitytxt= value;
}
public IWebElement ApplicantPostalCodetxt
{
	get => applicantPostalCodetxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantPostalCode""]") : applicantPostalCodetxt;
	set => applicantPostalCodetxt= value;
}
public IWebElement ApplicantEmailtxt
{
	get => applicantEmailtxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantEmail""]") : applicantEmailtxt;
	set => applicantEmailtxt= value;
}
public IWebElement PhoneHometxt
{
	get => phoneHometxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtPhoneHome""]") : phoneHometxt;
	set => phoneHometxt= value;
}
public IWebElement ApplicantExt1txt
{
	get => applicantExt1txt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantExt1""]") : applicantExt1txt;
	set => applicantExt1txt= value;
}
public IWebElement PhoneCelltxt
{
	get => phoneCelltxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtPhoneCell""]") : phoneCelltxt;
	set => phoneCelltxt= value;
}
public IWebElement ApplicantExt2txt
{
	get => applicantExt2txt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantExt2""]") : applicantExt2txt;
	set => applicantExt2txt= value;
}
public IWebElement ApplicantOtherLanguagetxt
{
	get => applicantOtherLanguagetxt == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppContent_txtApplicantOtherLanguage""]") : applicantOtherLanguagetxt;
	set => applicantOtherLanguagetxt= value;
}
public IWebElement Mainlnk
{
	get => mainlnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlPrimaryNav_lnkMain""]") : mainlnk;
	set => mainlnk= value;
}
public IWebElement Queuelnk
{
	get => queuelnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlPrimaryNav_lnkQueue""]") : queuelnk;
	set => queuelnk= value;
}
public IWebElement Clientlnk
{
	get => clientlnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlPrimaryNav_lnkClient""]") : clientlnk;
	set => clientlnk= value;
}
public IWebElement Maintenancelnk
{
	get => maintenancelnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlPrimaryNav_lnkMaintenance""]") : maintenancelnk;
	set => maintenancelnk= value;
}
public IWebElement Reportslnk
{
	get => reportslnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlPrimaryNav_lnkReports""]") : reportslnk;
	set => reportslnk= value;
}
public IWebElement Newlnk
{
	get => newlnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlStandardOperations_lnkNew""]") : newlnk;
	set => newlnk= value;
}
public IWebElement Savelnk
{
	get => savelnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlStandardOperations_lnkSave""]") : savelnk;
	set => savelnk= value;
}
public IWebElement Deletelnk
{
	get => deletelnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlStandardOperations_lnkDelete""]") : deletelnk;
	set => deletelnk= value;
}
public IWebElement AppListlnk
{
	get => appListlnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppPageNav_lnkAppList""]") : appListlnk;
	set => appListlnk= value;
}
public IWebElement Mergelnk
{
	get => mergelnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppPageNav_lnkMerge""]") : mergelnk;
	set => mergelnk= value;
}
public IWebElement Expenseslnk
{
	get => expenseslnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppPageNav_lnkExpenses""]") : expenseslnk;
	set => expenseslnk= value;
}
public IWebElement Authorizationlnk
{
	get => authorizationlnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppPageNav_lnkAuthorization""]") : authorizationlnk;
	set => authorizationlnk= value;
}
public IWebElement Narrativeslnk
{
	get => narrativeslnk == null ? DriverHelper.FindElementWithWait(Driver, @"//*[@id=""ctlAppPageNav_lnkNarratives""]") : narrativeslnk;
	set => narrativeslnk= value;
}

public PlaceHolderThis(IWebDriver driver)
{DriverHelper.WaitForPageLoad(driver);
this.Driver = driver;
}public PlaceHolderThis FillQuerytxt(string text)
{
	Querytxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantLastNametxt(string text)
{
	ApplicantLastNametxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantFirstNametxt(string text)
{
	ApplicantFirstNametxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantDob_txtDatectl(string text)
{
	ApplicantDob_txtDatectl.SendKeys(text);
	return this;
}
public PlaceHolderThis FillReferenceNumbertxt(string text)
{
	ReferenceNumbertxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantUnittxt(string text)
{
	ApplicantUnittxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantStreetNumbertxt(string text)
{
	ApplicantStreetNumbertxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantStreettxt(string text)
{
	ApplicantStreettxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantPOBoxtxt(string text)
{
	ApplicantPOBoxtxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantCitytxt(string text)
{
	ApplicantCitytxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantPostalCodetxt(string text)
{
	ApplicantPostalCodetxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantEmailtxt(string text)
{
	ApplicantEmailtxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillPhoneHometxt(string text)
{
	PhoneHometxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantExt1txt(string text)
{
	ApplicantExt1txt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillPhoneCelltxt(string text)
{
	PhoneCelltxt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantExt2txt(string text)
{
	ApplicantExt2txt.SendKeys(text);
	return this;
}
public PlaceHolderThis FillApplicantOtherLanguagetxt(string text)
{
	ApplicantOtherLanguagetxt.SendKeys(text);
	return this;
}
public Place_Holder ClickMainlnk(string text)
{
	Mainlnk.Click();
	return Place_Holder;
}
public Place_Holder ClickQueuelnk(string text)
{
	Queuelnk.Click();
	return Place_Holder;
}
public Place_Holder ClickClientlnk(string text)
{
	Clientlnk.Click();
	return Place_Holder;
}
public Place_Holder ClickMaintenancelnk(string text)
{
	Maintenancelnk.Click();
	return Place_Holder;
}
public Place_Holder ClickReportslnk(string text)
{
	Reportslnk.Click();
	return Place_Holder;
}
public Place_Holder ClickNewlnk(string text)
{
	Newlnk.Click();
	return Place_Holder;
}
public Place_Holder ClickSavelnk(string text)
{
	Savelnk.Click();
	return Place_Holder;
}
public Place_Holder ClickDeletelnk(string text)
{
	Deletelnk.Click();
	return Place_Holder;
}
public Place_Holder ClickAppListlnk(string text)
{
	AppListlnk.Click();
	return Place_Holder;
}
public Place_Holder ClickMergelnk(string text)
{
	Mergelnk.Click();
	return Place_Holder;
}
public Place_Holder ClickExpenseslnk(string text)
{
	Expenseslnk.Click();
	return Place_Holder;
}
public Place_Holder ClickAuthorizationlnk(string text)
{
	Authorizationlnk.Click();
	return Place_Holder;
}
public Place_Holder ClickNarrativeslnk(string text)
{
	Narrativeslnk.Click();
	return Place_Holder;
}

Cleaning up...
Quitting...
Goodbye!
